@{
    ViewBag.Title = "主页";
}

<div class="contentBar" id="cb">
    <h4>@ViewBag.Message <a href="@ViewBag.Url" target="_blank">瀑布流布局</a></h4>
    <div>
        <p id="tiptitle" />
    </div>
</div>

@*引入js*@
<script src="../../Scripts/jufine.waterfall.arrayExten.js"></script>
<script src="../../Scripts/jufine.waterfall.pageInfo.js"></script>
<script src="../../Scripts/jufine.waterfall.core.js"></script>
<script src="../../Scripts/jufine.waterfall.main.js"></script>
<script src="../../Scripts/jufine.waterfall.core.curr.js"></script>

@*引入样式*@
<link href="../../Content/jufine.waterfall.css" rel="stylesheet" />

@*瀑布流布局*@

<div id="waterfallDemo" style="width: 100%;">
    @* 1 记录当前记录条数*@
    <input type="hidden" id="hdCurrItemCount" value="0" />
    @* 2 放置瀑布流条目的容器*@
    <div class="wrap" id="container" style="width: 100%">
    </div>
    @* 3 显示数据加载中的图片*@
    <div class="loading" id="loading" style="display: none;">
        <img id="loadingImage" src="../../images/loading.gif" alt="数据加载中。。。" />
    </div>
</div>

<script type="text/javascript">

    //记录当前页 每一次获取后 ++
    var pageNumber = 1;
    //放置图片的容器 div
    var container = X.$('container');
    //数据加载中对象 div
    var loading = X.$('loading');

    //数据源地址
    var _url = 'Home/GetWaterfallImageInfos';
    //最底部的滚轮上拉像素
    var _moveScrollTop = PageInfo.GetWindowHeight() * 0.15;
    //数据加载超时时间（ms）
    var _autoTryHiddenLoadingDelay = 15000;

    var currObj = new Waterfall(container, {
        itemSelector: 'item',
        load: function (success) {
            //显示数据加载中
            Z.ShowLoading(loading, currObj, _autoTryHiddenLoadingDelay);
            //异步获取图片列表
            X.ajax({
                url: _url,
                type: "GET",
                data: _GetQueryString(),
                dataType: "json",
                failFn: function () {
                    Z.LoadCompleted(loading, currObj, _moveScrollTop);
                },
                sucFn: function (data) {
                    //如果现在已经不需要加载数据了 --important
                    if (!Z.CheckLoading(loading,currObj)) {
                        return;
                    }
                    //加载一页的数据
                    Z.LoadOnePage(success, function () {
                        var div = null;
                        if (data != null) {
                            div = document.createElement('div');
                            for (var i = 0; i < data.photos.length; i++) {
                                var item = document.createElement('div');
                                item.className = 'item';
                                item.width = pageMess.ImageWidth;
                                item.innerHTML = '<div style="width:' + item.width + 'px;padding:2px;"><img src="' + data.photos[i].src + '"/></div>';
                                item.innerHTML += '<div style="width:' + item.width + 'px;padding:2px;"><p>' + data.photos[i].title + '</p></div>';

                                div.appendChild(item);
                            }
                            container.appendChild(div);
                            X.fadeIn(div);
                            pageNumber++;
                            //页面显示信息设置
                            X.$('hdCurrItemCount').value = parseInt(X.$('hdCurrItemCount').value) + parseInt(data.pageCount);
                        }
                        return div;
                    });
                }
            });
        },
        complete: function () {
            Z.LoadCompleted(loading, currObj, _moveScrollTop);
        }
    });

    Z.CoreExecute({
        loadingObj: loading,
        currObj: currObj,
        //定时检测滚动条是否到达底部--定时器
        BottomScrollDetectorInfo: {
            needBind: true,
            delay: 2000,
            scrollTop: _moveScrollTop
        },
        //窗体尺寸变化后，重新加载数据--window.resize
        WindowResizeInfo: {
            needBind: true,
            delay: 500,
            autoTryHiddenLoadingDelay: _autoTryHiddenLoadingDelay,
            itemCountSelector: 'hdCurrItemCount',
            container: container
        }
    });

    //设置查询字符串
    function _GetQueryString() {
        //设置传递参数
        var queryData = new Array(3);
        queryData.push('PageNumber=' + pageNumber);
        queryData.push('ImageWidth=' + pageMess.ImageWidth);
        queryData.push('CurrItemCount=' + X.$('hdCurrItemCount').value);
        queryData.push('ScrollTop=' + PageInfo.GetScrollTop());
        return queryData.join('&');
    }

</script>
